@tailwind base;
@tailwind components;
@tailwind utilities;
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
:where(ul, ol):where([class]) {
    padding-left: 0;
}

/**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
body,
:where(blockquote, figure):where([class]) {
    margin: 0;
}

/**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
    margin-block: 0;
}

:where(dd[class]) {
    margin-left: 0;
}

:where(fieldset[class]) {
    margin-left: 0;
    padding: 0;
    border: none;
}

/**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
:where(ul[class]) {
    list-style: none;
}

/**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
p {
    --paragraphMarginBottom: 24px;
    margin-block: 0;
}

    /**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
    p:where(:not([class]):not(:last-child)) {
        margin-bottom: var(--paragraphMarginBottom);
    }

/**
   Упрощаем работу с изображениями
  */
img {
    display: block;
    max-width: 100%;
}

/**
   Наследуем свойства шрифт для полей ввода
  */
input,
textarea,
select,
button {
    font: inherit;
}

html {
    /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
    height: 100%;
    /**
     Плавный скролл
    */
    scroll-behavior: smooth;
}

body {
    /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
    min-height: 100%;
    /**
     Унифицированный интерлиньяж
    */
    line-height: 1.5;
}

/**
   Приводим к единому цвету svg-элементы
  */
svg *[fill] {
    fill: currentColor;
}

svg *[stroke] {
    stroke: currentColor;
}

/**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
svg * {
    transition-property: fill, stroke;
}

/**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

body {
    font-family: "Montserrat Alternates", sans-serif;
    font-size: 18px;
    font-weight: 400;
    color: black;
    line-height: 1.1;
}

a {
    text-decoration: none;
}

a,
button {
    cursor: pointer;
    transition: all 0.3s ease 0s;
    user-select: none;
}

h1, h2, h3, h4, h5, h6 {
    color: rgb(30 58 138 / 1);
    font-weight: 600;
}

.visually-hidden {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    margin: -1px !important;
    border: 0 !important;
    padding: 0 !important;
    white-space: nowrap !important;
    clip-path: inset(100%) !important;
    clip: rect(0 0 0 0) !important;
    overflow: hidden !important;
}

.container {
    --padding-x: 50px;

    @media (max-width: 768px) {
        --padding-x: 25px;
    }

    @media (max-width: 480px) {
        --padding-x: 15px;
    }

    max-width: calc(1440px + var(var(--padding-x)) * 2);
    padding-inline: var(--padding-x);
    margin-inline: auto;
}

.section {
    width: 100%;
    padding-block: 50px;
}

.blue__link {
    position: relative;
    padding-block: 3px;
    color: rgb(59 130 246 / 1);
    &::after

{
    content: "";
    position: absolute;
    bottom: 0;
    left: 50%;
    translate: -50%;
    width: 0;
    height: 2px;
    background-color: rgb(37 99 235 / 1);
    transition: all 0.3s ease 0s;
}


&:hover {
    color: rgb(37 99 235 / 1);
}

&:hover,
&:active {
    &::after

{
    width: 100%;
}

}


&:active {
    color: rgb(29 78 216 / 1);
    &::after

{
    width: 10%;
}

}
}

.blue__button {
    border: none;
    border: 1px solid transparent;
    padding-inline: 25px;
    padding-block: 10px;
    border-radius: 15px;
    color: white;
    font-weight: 500;
    background-color: rgb(59 130 246 / 1);
    &:hover

{
    background-color: rgb(37 99 235 / 1);
}

&:hover,
&:active {
    transform: scale(.95);
}

&:active {
    background-color: rgb(29 78 216 / 1);
}

}

.form__wrapper {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: start;
    row-gap: 5px;
}

.form__label {
    padding-inline: 20px;
    font-size: 18px;
    font-weight: 500;
    color: black;
    pointer-events: none;
}

.form__input {
    width: 100%;
    padding: 12px 20px;
    border: 2px solid transparent;
    border-bottom-color: rgb(59 130 246 / 1);
    color: black;
    background-color: transparent;
    transition: all 0.3s ease 0s;
    position: relative;

    @media (max-width: 480px) {
        padding: 7px 10px;
    }

    &:hover, &:active

{
    border-bottom-color: rgb(29 78 216 / 1);
}

&::placeholder {
    color: rgba(150, 150, 150, 1);
}

&:focus {
    border-radius: 20px;
    border: 2px solid rgb(37 99 235 / 1);
    outline: none;
}
}

.form__error {
    font-size: 14px;
    color: red;
}
